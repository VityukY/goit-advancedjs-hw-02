{"version":3,"file":"commonHelpers2.js","sources":["../src/js/02-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nconst inputRef = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('button[data-start]');\nconst timerContainer = document.querySelector('.timer');\n\nstartBtn.disabled = true;\nlet restTime;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const unixSelected = Date.parse(selectedDates);\n    restTime = unixSelected - Date.now();\n    if (restTime <= 0) {\n      window.alert('Please choose a date in the future');\n      return;\n    }\n\n    timerUpdateHandler(restTime);\n    startBtn.disabled = false;\n  },\n};\n\nflatpickr(inputRef, options);\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = addLeadingZero(Math.floor(ms / day));\n  // Remaining hours\n  const hours = addLeadingZero(Math.floor((ms % day) / hour));\n  // Remaining minutes\n  const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));\n  // Remaining seconds\n  const seconds = addLeadingZero(\n    Math.floor((((ms % day) % hour) % minute) / second)\n  );\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction timerUpdateHandler(restTime) {\n  const timerData = convertMs(restTime);\n  timerContainer.querySelector('[data-days]').textContent = timerData.days;\n  timerContainer.querySelector('[data-hours]').textContent = timerData.hours;\n  timerContainer.querySelector('[data-minutes]').textContent =\n    timerData.minutes;\n  timerContainer.querySelector('[data-seconds]').textContent =\n    timerData.seconds;\n}\n\nstartBtn.addEventListener('click', () => {\n  startBtn.disabled = true;\n  inputRef.disabled = true;\n  const timerITem = setInterval(() => {\n    restTime -= 1000;\n    if (restTime >= 0) {\n      timerUpdateHandler(restTime);\n    } else {\n      clearInterval(timerITem);\n    }\n  }, 1000);\n});\n"],"names":["inputRef","startBtn","timerContainer","restTime","options","selectedDates","timerUpdateHandler","flatpickr","addLeadingZero","value","convertMs","ms","days","hours","minutes","seconds","timerData","timerITem"],"mappings":"wIAGA,MAAMA,EAAW,SAAS,cAAc,kBAAkB,EACpDC,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAiB,SAAS,cAAc,QAAQ,EAEtDD,EAAS,SAAW,GACpB,IAAIE,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CAGrB,GADAF,EADqB,KAAK,MAAME,CAAa,EACnB,KAAK,MAC3BF,GAAY,EAAG,CACjB,OAAO,MAAM,oCAAoC,EACjD,MACD,CAEDG,EAAmBH,CAAQ,EAC3BF,EAAS,SAAW,EACrB,CACH,EAEAM,EAAUP,EAAUI,CAAO,EAE3B,SAASI,EAAeC,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC,CAEA,SAASC,EAAUC,EAAI,CAQrB,MAAMC,EAAOJ,EAAe,KAAK,MAAMG,EAAK,KAAG,CAAC,EAE1CE,EAAQL,EAAe,KAAK,MAAOG,EAAK,MAAO,IAAI,CAAC,EAEpDG,EAAUN,EAAe,KAAK,MAAQG,EAAK,MAAO,KAAQ,GAAM,CAAC,EAEjEI,EAAUP,EACd,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,CACtD,EAEE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAAST,EAAmBH,EAAU,CACpC,MAAMa,EAAYN,EAAUP,CAAQ,EACpCD,EAAe,cAAc,aAAa,EAAE,YAAcc,EAAU,KACpEd,EAAe,cAAc,cAAc,EAAE,YAAcc,EAAU,MACrEd,EAAe,cAAc,gBAAgB,EAAE,YAC7Cc,EAAU,QACZd,EAAe,cAAc,gBAAgB,EAAE,YAC7Cc,EAAU,OACd,CAEAf,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,SAAW,GACpBD,EAAS,SAAW,GACpB,MAAMiB,EAAY,YAAY,IAAM,CAClCd,GAAY,IACRA,GAAY,EACdG,EAAmBH,CAAQ,EAE3B,cAAcc,CAAS,CAE1B,EAAE,GAAI,CACT,CAAC"}