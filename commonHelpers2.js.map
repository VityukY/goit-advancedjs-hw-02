{"version":3,"file":"commonHelpers2.js","sources":["../src/js/02-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nconst inputRef = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('button[data-start]');\nconst timerContainer = document.querySelector('.timer');\n\nstartBtn.disabled = true;\nlet restTime\n\nconst options = {\n   enableTime: true,\n   time_24hr: true,\n   defaultDate: new Date(),\n   minuteIncrement: 1,\n   onClose(selectedDates) {\n      const unixSelected = Date.parse(selectedDates);\n      restTime = unixSelected - Date.now();\n      if(restTime <= 0 ) {\n         window.alert(\"Please choose a date in the future\");\n         return\n      }\n      \n      timerUpdateHandler (restTime)\n      startBtn.disabled = false;\n   },\n   };\n\nflatpickr(inputRef, options) \n\nfunction addLeadingZero(value) {\n   return value.toString().padStart(2, '0')\n   }\n\nfunction convertMs(ms) {\n   // Number of milliseconds per unit of time\n   const second = 1000;\n   const minute = second * 60;\n   const hour = minute * 60;\n   const day = hour * 24;\n   \n   // Remaining days\n   const days = addLeadingZero(Math.floor(ms / day));\n   // Remaining hours\n   const hours = addLeadingZero(Math.floor((ms % day) / hour));\n   // Remaining minutes\n   const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));\n   // Remaining seconds\n   const seconds = addLeadingZero(Math.floor((((ms % day) % hour) % minute) / second));\n   \n   return { days, hours, minutes, seconds };\n   }\n\nfunction timerUpdateHandler (restTime) {\n      const timerData = convertMs(restTime);\n      timerContainer.querySelector('[data-days]').textContent = timerData.days;\n      timerContainer.querySelector('[data-hours]').textContent = timerData.hours;\n      timerContainer.querySelector('[data-minutes]').textContent = timerData.minutes;\n      timerContainer.querySelector('[data-seconds]').textContent = timerData.seconds;\n   \n}\n\nstartBtn.addEventListener('click', () => {\n   startBtn.disabled = true;\n   const timerITem = setInterval (()=> {\n         restTime-=1000;\n         if (restTime>=0) {\n            timerUpdateHandler (restTime)\n         }\n         else {\n            clearInterval(timerITem)\n         }\n      \n   }, 1000)\n   \n\n})"],"names":["inputRef","startBtn","timerContainer","restTime","options","selectedDates","timerUpdateHandler","flatpickr","addLeadingZero","value","convertMs","ms","days","hours","minutes","seconds","timerData","timerITem"],"mappings":"wIAGA,MAAMA,EAAW,SAAS,cAAc,kBAAkB,EACpDC,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAiB,SAAS,cAAc,QAAQ,EAEtDD,EAAS,SAAW,GACpB,IAAIE,EAEJ,MAAMC,EAAU,CACb,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CAGpB,GADAF,EADqB,KAAK,MAAME,CAAa,EACnB,KAAK,MAC5BF,GAAY,EAAI,CAChB,OAAO,MAAM,oCAAoC,EACjD,MACF,CAEDG,EAAoBH,CAAQ,EAC5BF,EAAS,SAAW,EACtB,CACJ,EAEAM,EAAUP,EAAUI,CAAO,EAE3B,SAASI,EAAeC,EAAO,CAC5B,OAAOA,EAAM,SAAQ,EAAG,SAAS,EAAG,GAAG,CACtC,CAEJ,SAASC,EAAUC,EAAI,CAQpB,MAAMC,EAAOJ,EAAe,KAAK,MAAMG,EAAK,KAAG,CAAC,EAE1CE,EAAQL,EAAe,KAAK,MAAOG,EAAK,MAAO,IAAI,CAAC,EAEpDG,EAAUN,EAAe,KAAK,MAAQG,EAAK,MAAO,KAAQ,GAAM,CAAC,EAEjEI,EAAUP,EAAe,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,CAAC,EAElF,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACrC,CAEJ,SAAST,EAAoBH,EAAU,CACjC,MAAMa,EAAYN,EAAUP,CAAQ,EACpCD,EAAe,cAAc,aAAa,EAAE,YAAcc,EAAU,KACpEd,EAAe,cAAc,cAAc,EAAE,YAAcc,EAAU,MACrEd,EAAe,cAAc,gBAAgB,EAAE,YAAcc,EAAU,QACvEd,EAAe,cAAc,gBAAgB,EAAE,YAAcc,EAAU,OAE7E,CAEAf,EAAS,iBAAiB,QAAS,IAAM,CACtCA,EAAS,SAAW,GACpB,MAAMgB,EAAY,YAAa,IAAK,CAC9Bd,GAAU,IACNA,GAAU,EACXG,EAAoBH,CAAQ,EAG5B,cAAcc,CAAS,CAG/B,EAAE,GAAI,CAGV,CAAC"}